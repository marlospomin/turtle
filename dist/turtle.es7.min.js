var _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a};const defaultConfig={rootMargin:'50px',threshold:0};if(!('IntersectionObserver'in window))throw new Error('Intersection Observer is not supported by this browser.');export default function(a='.turtle',b={}){function c(a){return new Promise((b,c)=>{const d=new Image;d.src=a,d.onload=b,d.onerror=c})}function d(a){const b=a.dataset.src;return b?c(b).then(()=>{g(a,b)}):void 0}function e(){k&&k.disconnect()}function f(a){0===l&&e(),a.forEach((a)=>{0<a.intersectionRatio&&(l--,k.unobserve(a.target),d(a.target))})}function g(a,b){a.classList.add('turle--handled'),a.src=b}const{rootMargin:h,treshold:i}=_extends({},defaultConfig,b),j=document.querySelectorAll(a);let k,l=j.length;return function(a){k=new IntersectionObserver(f,b),a.forEach((a)=>{a.classList.contains('turtle--handled')||k.observe(a)})}(j)}