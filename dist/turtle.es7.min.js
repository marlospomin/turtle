const images=document.querySelectorAll('.turtle'),config={rootMargin:'50px 0px',threshold:0};export default function turtle(){function a(a){return new Promise((b,c)=>{const d=new Image;d.src=a,d.onload=b,d.onerror=c})}function b(b){const c=b.dataset.src;return c?a(c).then(()=>{d(b,c)}):void 0}function c(){e&&e.disconnect()}function d(a,b){a.classList.add('turle--handled'),a.src=b}let e,f=images.length;'IntersectionObserver'in window?(e=new IntersectionObserver(function(a){0===f&&c(),a.forEach((a)=>{0<a.intersectionRatio&&(f--,e.unobserve(a.target),b(a.target))})},config),images.forEach((a)=>{a.classList.contains('turtle--handled')||e.observe(a)})):function(a){a.forEach((a)=>{b(a)})}(images)}turtle();