!function(e,t){if("function"==typeof define&&define.amd)define(["module","exports"],t);else if("undefined"!=typeof exports)t(module,exports);else{var n={exports:{}};t(n,n.exports),e.turtle=n.exports}}(this,function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){function e(e){v=new IntersectionObserver(s,a),e.forEach(function(e){e.classList.contains("turtle--handled")||v.observe(e)})}function t(e){return new Promise(function(t,n){var r=new Image;r.src=e,r.onload=t,r.onerror=n})}function o(e){var n=e.dataset.src;if(n)return t(n).then(function(){c(e,n)})}function i(){v&&v.disconnect()}function s(e){0===l&&i(),e.forEach(function(e){e.intersectionRatio>0&&(l--,v.unobserve(e.target),o(e.target))})}function c(e,t){e.classList.add("turle--handled"),e.src=t}var u=arguments.length>0&&void 0!==arguments[0]?arguments[0]:".turtle",a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},f=n({},r,a),d=(f.rootMargin,f.treshold,document.querySelectorAll(u)),l=d.length,v=void 0;return e(d)};var n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},r={rootMargin:"50px",threshold:0};if(!("IntersectionObserver"in window))throw new Error("Intersection Observer is not supported by this browser.");e.exports=t.default});